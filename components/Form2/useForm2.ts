/**********************************************************************
 *
 *   Component hook generated by Quest
 *
 *   Code Logic for the component goes in this hook
 *   To setup bindings that use the data here or call the functions here, use the Quest editor
 *   Do not change the name of the hook
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
const useForm2 = () => {
  const [data, setData] = useState<FormData>({
    firstName: '',
    company: '',
    phone: '',
    email: '',
    comment: '',
  });

  const [errors, setErrors] = useState<Partial<FormData>>({});

  const handleChange = (field: keyof FormData, value: string) => {
    setData((prevData) => ({
      ...prevData,
      [field]: value,
    }));
  };
  const validateEmail = (email: string) => {
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    return emailRegex.test(email);
  };
  const validatePhone = (phone: string) => {
    const phoneRegex = /^\d+$/;
    return phoneRegex.test(phone);
  };
  const handleSubmit = () => {
    const newErrors: Partial<FormData> = {};

    if (!data.email || !validateEmail(data.email)) {
      newErrors.email = 'Invalid email';
    }

    if (!data.phone || !validatePhone(data.phone)) {
      newErrors.phone = 'Invalid phone';
    }

    setErrors(newErrors);

    if (Object.keys(newErrors).length === 0) {
      // Handle form submission
    }
  };

  const data: any = { data, errors };

  const fns: any = { handleChange, validateEmail, validatePhone, handleSubmit };

  return { data, fns };
};

export default useForm2;
